<?xml version="1.0" encoding="utf-8"?>
<manifest
	xmlns:android="http://schemas.android.com/apk/res/android"
	package="com.novoda.oauth"
	android:versionCode="1"
	android:versionName="1.0">

	<!--
		The permission ensure that no other application will try to access the
		OAuth information of another application. After creating the OAuth
		access, we grant the read permission on the specific URI created
		through the authorisation and activation. More work is needed in order
		to ensure security. Currently we only check against the package name
		which is not secure at all.
	-->
	<permission
		android:name="com.novoda.oauth.ACCESS_OAUTH_INFORMATION"
		android:label="@string/permlab_oauth"
		android:description="@string/permdesc_oauth"
		android:protectionLevel="dangerous" />

	<application
		android:icon="@drawable/icon"
		android:label="@string/app_name">

		<!-- provider containing all OAuth information -->
		<provider
			android:name=".provider.OAuthProvider"
			android:grantUriPermissions="true"
			android:permission="com.novoda.oauth.ACCESS_OAUTH_INFORMATION"
			android:authorities="com.novoda.oauth.provider.OAuth" />

		<!-- landing activity which list all OAuth installed applications -->
		<activity
			android:name=".activities.OAuthListing">
			<intent-filter>
				<action
					android:name="android.intent.action.MAIN" />
				<category
					android:name="android.intent.category.LAUNCHER" />
			</intent-filter>
			<intent-filter>
				<action
					android:name="android.intent.action.VIEW" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:mimeType="vnd.android.cursor.dir/vnd.novoda.oauth" />
			</intent-filter>
		</activity>

		<!-- List activity for all consumers given a OAuth registry -->
		<activity
			android:name=".activities.ConsumerListing">
			<intent-filter>
				<action
					android:name="android.intent.action.VIEW" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:mimeType="vnd.android.cursor.dir/vnd.novoda.oauth.consumer" />
			</intent-filter>
		</activity>

		<!--
			This is the meat of OAuth. It permits the Authorisation and
			activation process.
		-->
		<activity
			android:name=".activities.OAuthActivity"
			android:permission="android.permission.INTERNET"
			android:launchMode="singleTask">
			<intent-filter>
				<action
					android:name="android.intent.action.VIEW" />
				<category
					android:name="android.intent.category.BROWSABLE" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:scheme="oauth" />
			</intent-filter>
			<intent-filter>
				<action
					android:name="android.intent.action.INSERT" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:mimeType="vnd.android.cursor.dir/vnd.novoda.oauth" />
			</intent-filter>
		</activity>

		<!--
			This activity will call a URL using OAuth signing. You can use this
			activity if you don't want to hassle with OAuth for actual end point
			calls.
		-->
		<activity
			android:name=".activities.OAuthCallActivity"
			android:permission="android.permission.INTERNET">

			<intent-filter>
				<action
					android:name="com.novoda.oauth.action.OAUTH_CALL" />
				<category
					android:name="android.intent.category.DEFAULT" />
			</intent-filter>
		</activity>

		<activity
			android:name=".activities.OAuthItemViewActivity"
			android:permission="android.permission.INTERNET"
			android:launchMode="singleTask">

			<intent-filter>
				<action
					android:name="android.intent.action.VIEW" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:mimeType="vnd.android.cursor.item/vnd.novoda.oauth" />
			</intent-filter>

			<!-- callback request -->
			<intent-filter>
				<action
					android:name="android.intent.action.VIEW" />
				<category
					android:name="android.intent.category.BROWSABLE" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:scheme="x-oauth-android" />
			</intent-filter>

			<!--
				callback request - hack for services that can't take the above
				callback schema
			-->
			<intent-filter>
				<action
					android:name="android.intent.action.VIEW" />
				<category
					android:name="android.intent.category.BROWSABLE" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:scheme="http"
					android:host="novoda.com" />
			</intent-filter>
		</activity>

		<activity
			android:name=".activities.OAuthCallActivity">
			<intent-filter>
				<action
					android:name="com.novoda.oauth.action.OAUTH_CALL" />
				<category
					android:name="android.intent.category.DEFAULT" />
				<data
					android:mimeType="vnd.android.cursor.item/vnd.novoda.oauth" />
			</intent-filter>
		</activity>

		<!-- Just for the icons... -->
		<activity-alias
			android:name="TwitterIcon"
			android:icon="@drawable/twitter_48x48"
			android:targetActivity=".activities.OAuthItemViewActivity" />

		<activity-alias
			android:name="JaikuIcon"
			android:icon="@drawable/jaiku"
			android:targetActivity=".activities.OAuthItemViewActivity" />

		<activity-alias
			android:name="FireEagleIcon"
			android:icon="@drawable/fireeagle_application_48x48"
			android:targetActivity=".activities.OAuthItemViewActivity" />

		<activity-alias
			android:name="BrightKiteIcon"
			android:icon="@drawable/brightkite_48x48"
			android:targetActivity=".activities.OAuthItemViewActivity" />
			
		<activity-alias
			android:name="MySpaceIcon"
			android:icon="@drawable/myspace_48x48"
			android:targetActivity=".activities.OAuthItemViewActivity" />

		<activity-alias
			android:name="RummbleIcon"
			android:icon="@drawable/rummble_48x48"
			android:targetActivity=".activities.OAuthItemViewActivity" />
			
		<!--
			Registering all application's so they can access their URI - is
			disabled for now
		-->
		<receiver
			android:name="com.novoda.oauth.receiver.RegisterURIPermissions">
			<intent-filter>
				<action
					android:name="android.intent.action.BOOT_COMPLETED" />
			</intent-filter>
		</receiver>
	</application>

	<uses-permission
		android:name="android.permission.INTERNET" />
	<uses-permission
		android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

	<!--
		We add our own permission so we can access the provider through our
		package. No other application should directly use this permission.
	-->
	<uses-permission
		android:name="com.novoda.oauth.ACCESS_OAUTH_INFORMATION" />

	<uses-sdk
		android:minSdkVersion="3" />
</manifest> 